<?php
class Management_NewofficeController extends Zend_Controller_Action {
//bhavana
    public function init() {
        $this->view->pageTitle='New Office';
        $storage = new Zend_Auth_Storage_Session();
	$data = $storage->read();
	if(!$data){
            $this->_redirect('index/login');
	}
        $sessionName = new Zend_Session_Namespace('ourbank');
        $this->view->createdby = $sessionName->primaryuserid;
    }

   public function indexAction() {
        $sessionName = new Zend_Session_Namespace('ourbank');
        $storage = new Zend_Auth_Storage_Session();
	$data = $storage->read();
	if(!$data){
            $this->_redirect('index/login');
	}
        $sessionName->primaryuserid;
        $this->view->title = "New Office";

        $searchForm = new Management_Form_Search();
        $this->view->form = $searchForm;

        $office = new Management_Model_Office();
        $office = $office->getOffice();
        foreach($office as $office) {
                $searchForm->field1->addMultiOption($office['office_name'],$office['office_name']);
                    }
        $sessionName = new Zend_Session_Namespace('ourbank');
        $this->view->createdby = $sessionName->primaryuserid;
        $office = new Management_Model_Office();
        $result = $office->getOffice();

        $page = $this->_getParam('page',1);
        $paginator = Zend_Paginator::factory($result);
        $paginator->setItemCountPerPage(5);
        $paginator->setCurrentPageNumber($page);
        $this->view->paginator = $paginator;

        if ($this->_request->isPost() && $this->_request->getPost('Search')) {
            $formData = $this->_request->getPost();
            if ($this->_request->isPost()) {
                $formData = $this->_request->getPost();
                if ($searchForm->isValid($formData)) {
                    $office = new Management_Model_Office();
                    $result = $office->SearchOffice($searchForm->getValues());

                    $page = $this->_getParam('page',1);
                    $paginator = Zend_Paginator::factory($result);
                    $paginator->setItemCountPerPage(5);
                    $paginator->setCurrentPageNumber($page);
                    $this->view->paginator = $paginator;
                }
            }
        }

    }

    public function officeviewAction() 
    {
                $this->view->title ="viewOffice";
        $storage = new Zend_Auth_Storage_Session();
	$data = $storage->read();
	if(!$data){
            $this->_redirect('index/login');
	}
		$office_id = (int)$this->_getParam('id');
                $office = new Management_Model_Office();
                $result = $office->viewOffice($office_id);
                $this->view->office = $result;
    }

     public function officeaddAction()  {
        $this->view->title = "New Office";
        $storage = new Zend_Auth_Storage_Session();
	$data = $storage->read();
	if(!$data){
            $this->_redirect('index/login');
	}

        $path = $this->view->baseUrl();
        $officeForm = new Management_Form_Office($path);
        $this->view->form = $officeForm;

        $office = new Management_Model_Office();
        $this->view->officeDetails = $office->getOffice();


        $this->view->officehierarchyselect = $office->officehierarchyselect();

        if($this->view->officehierarchyselect) {
        $officehierarchyoutid = $office->getOfficehierarchyDetailsout();
        foreach($officehierarchyoutid as $officehierarchyoutids) {
                $officeForm->officetype_id->addMultiOption($officehierarchyoutids->officetype_id,$officehierarchyoutids->officetype);
                    }
        } else {

        $officehierarchy = new Management_Model_OfficeHierarchy();
        $officehierarchy = $officehierarchy->getOfficehierarchyDetails();
        foreach($officehierarchy as $officehierarchy) {
                $officeForm->officetype_id->addMultiOption($officehierarchy['officetype_id'],$officehierarchy['officetype']);
                    }
        }

        if ($this->_request->isPost() && $this->_request->getPost('Submit')) {
            $formData = $this->_request->getPost();
            if ($this->_request->isPost()) {
                $formData = $this->_request->getPost();

                    if ($officeForm->isValid($formData)) {

                        $parentofficeid=$this->_request->getParam('parentoffice_ids');
                        if($parentofficeid) {
                        $office = new Management_Model_Officeaddress();

			$office_id = $office->officeInsert(array('office_id' => ''));


                        $result = $office->addOfficeAddress($officeForm->getValues(),$office_id);

                        $officeId=str_pad($office_id,3,"0",'STR_PAD_LEFT'); 
                        $shortname = strtoupper($this->_request->getParam('officeshort_name'));
			$banknumber='000';
                        $bankaccounnumber=$officeId.$shortname.$banknumber;


                        $bankoffice=new Management_Model_Office();

	                for($i=1;$i<=3;$i++) {
                        $bankaccounts = array('bankaccont_id'=>'',
                                              'bank_branch_id'=>$office_id,
                                              'bank_branch_account' => $bankaccounnumber.$i);
                            $bank=$bankoffice->bankaccountsinsert($bankaccounts);
                            }
                        $officeNames = new Management_Model_Office();

                        $result = $officeNames->addOfficeNames($officeForm->getValues(),$office_id,$parentofficeid);
                        $this->_redirect('management/newoffice');
                        } else {
				$officeForm->officetype_id->setvalue('');
                                $this->view->error = "Select the office type and parent office properly"; 
                        }

                    } 

                }
            }
        }


    public function officeeditAction() {

        $this->view->title = "Edit Office";
        $storage = new Zend_Auth_Storage_Session();
	$data = $storage->read();
	if(!$data){
            $this->_redirect('index/login');
	}
        $office_id = (int)$this->_getParam('id');
        $this->view->office_id = $office_id;

        $path = $this->view->baseUrl();
        $officeForm = new Management_Form_Office($path);
	$this->view->form = $officeForm;

        $office = new Management_Model_Office();
        $this->view->officeDetails = $office->getOffice();

        $officehierarchy = new Management_Model_OfficeHierarchy();
        $officehierarchy = $officehierarchy->getOfficehierarchyDetails();
        foreach($officehierarchy as $officehierarchy) {
                $officeForm->officetype_id->addMultiOption($officehierarchy['officetype_id'],$officehierarchy['officetype']);
                    }

        $officehierarchy = new Management_Model_OfficeHierarchy();
        $officehierarchy = $officehierarchy->getOfficehierarchyDetails();
        foreach($officehierarchy as $officehierarchy) {
                $officeForm->parentoffice_id->addMultiOption($officehierarchy['officetype_id'],$officehierarchy['officetype']);
                    }


        $office = new Management_Model_Office();
        $result = $office->viewOffice($office_id); 
 
        foreach($result as $office) {
                $this->view->form->office_id->setValue($office['office_id']);
                $this->view->form->officeupdates_id->setValue($office['officeupdates_id']);
                $this->view->form->officetype_id->setValue($office['officetype_id']);
                $this->view->form->office_name->setValue($office['office_name']);
                $this->view->form->parentoffice_id->setValue($office['parentoffice_id']);
                $this->view->form->officeshort_name->setValue($office['officeshort_name']);
                $this->view->form->officeaddress1->setValue($office['officeaddress1']);
                $this->view->form->officeaddress2->setValue($office['officeaddress2']);
                $this->view->form->officeaddress3->setValue($office['officeaddress3']);
                $this->view->form->officecity->setValue($office['officecity']);
                $this->view->form->officestate->setValue($office['officestate']);
                $this->view->form->officecountry->setValue($office['officecountry']);
                $this->view->form->officepincode->setValue($office['officepincode']);
                $this->view->form->officephone->setValue($office['officephone']);
                $this->view->form->officedescription->setValue($office['officedescription']);
                $this->view->form->office_fax->setValue($office['office_fax']);
                $this->view->form->office_email_Id->setValue($office['office_email_Id']);
                $this->view->form->contactperson->setValue($office['contactperson']);
                $this->view->form->contactperson_phone1->setValue($office['contactperson_phone1']);
                $this->view->form->contactperson_phone2->setValue($office['contactperson_phone2']);
                $this->view->form->contactperson_email->setValue($office['contactperson_email']);
        }

        $officeForm->office_name->removeValidator('Db_NoRecordExists');
        if ($this->_request->isPost() && $this->_request->getPost('Submit')) {
            $formData = $this->_request->getPost();
            if ($officeForm->isValid($formData)) {
                $officeupdates_id=$this->view->form->getValue('officeupdates_id');
                $office_id = $this->view->form->getValue('office_id');
                $officetype_id=$this->view->form->getValue('officetype_id');
                $parentoffice_id=$this->view->form->getValue('parentoffice_id');
                $officeName=$this->view->form->getValue('office_name');
                $officeShortName=$this->view->form->getValue('officeshort_name');
                $officeAddress1=$this->view->form->getValue('officeaddress1');
                $officeAddress2=$this->view->form->getValue('officeaddress2');
                $officeAddress3=$this->view->form->getValue('officeaddress3');
                $officeCity=$this->view->form->getValue('officecity');
                $officeState=$this->view->form->getValue('officestate');
                $officeCountry=$this->view->form->getValue('officecountry');
                $officePincode=$this->view->form->getValue('officepincode');
                $officePhone=$this->view->form->getValue('officephone');
                $officeDescription=ucwords($this->view->form->getValue('officedescription'));
                $officeFax=$this->view->form->getValue('office_fax');
                $officeEmailId=$this->view->form->getValue('office_email_Id');
                $contactPerson=ucwords($this->view->form->getValue('contactperson'));
                $contactPersonPhone1=$this->view->form->getValue('contactperson_phone1');
                $contactPersonPhone2=$this->view->form->getValue('contactperson_phone2');
                $contactPersonEmail=$this->view->form->getValue('contactperson_email');
                $userId=$this->view->user_id;

                $office = new Management_Model_Office();
                $result = $office->viewOffice($office_id); 
                foreach($result as $result) {
                        $parentOfficeId=$result['parentoffice_id'];
                        $officeTypeId=$result['officetype_id'];
                        $createdDate=$result['createddate'];
                        $createdBy=$result['createdby'];
                        $officeName1=$result['office_name'];
                        $officeShortName1=$result['officeshort_name'];
                        $officeAddress11=$result['officeaddress1'];
                        $officeAddress21=$result['officeaddress2'];
                        $officeAddress31=$result['officeaddress3'];
                        $officeCity1=$result['officecity'];
                        $officeState1=$result['officestate'];
                        $officeCountry1=$result['officecountry'];
                        $officePincode1=$result['officepincode'];
                        $officePhone1=$result['officephone'];
                        $officeDescription1=$result['officedescription'];
                        $officeFax1=$result['office_fax'];
                        $officeEmailId1=$result['office_email_Id'];
                        $contactPerson1=$result['contactperson'];
                        $contactPersonPhone11=$result['contactperson_phone1'];
                        $contactPersonPhone21=$result['contactperson_phone2'];
                        $contactPersonEmail1=$result['contactperson_email'];
                }

                $updateOlddata = array('office_name' => $officeName1,
                                       'officeshort_name' => $officeShortName1,
                                       'officeaddress1' => $officeAddress11,
                                       'officeaddress2' => $officeAddress21,
                                       'officeaddress3' => $officeAddress31,
                                       'officecity' => $officeCity1,
                                       'officestate' => $officeState1,
                                       'officecountry' => $officeCountry1,
                                       'officepincode' => $officePincode1,
                                       'officephone' => $officePhone1,
                                       'officedescription' => $officeDescription1,
                                       'office_fax' => $officeFax1,
                                       'office_email_Id' => $officeEmailId1,
                                       'contactperson' => $contactPerson1,
                                       'contactperson_phone1' => $contactPersonPhone11,
                                       'contactperson_phone2' => $contactPersonPhone21,
                                       'contactperson_email' => $contactPersonEmail1);

               $updateNewdata = array('office_name' => $officeName,
                                      'officeshort_name' => $officeShortName,
                                      'officeaddress1' => $officeAddress1,
                                      'officeaddress2' => $officeAddress2,
                                      'officeaddress3' => $officeAddress3,
                                      'officecity' => $officeCity,
                                      'officestate' => $officeState,
                                      'officecountry' => $officeCountry,
                                      'officepincode' => $officePincode,
                                      'officephone' => $officePhone,
                                      'officedescription' => $officeDescription,
                                      'office_fax' => $officeFax,
                                      'office_email_Id' => $officeEmailId,
                                      'contactperson' => $contactPerson,
                                      'contactperson_phone1' => $contactPersonPhone1,
                                      'contactperson_phone2' => $contactPersonPhone2,
                                      'contactperson_email' => $contactPersonEmail);
                        $data = array('office_id'=>$office_id,
                                      'office_name' => $officeName,
                                      'officeshort_name' => $officeShortName,
                                      'createdby' => $createdBy,
                                      'officeaddress1' => $officeAddress1,
                                      'officeaddress2' => $officeAddress2,
                                      'officeaddress3' => $officeAddress3,
                                      'officecity' => $officeCity,
                                      'officestate' => $officeState,
                                      'officecountry' => $officeCountry,
                                      'officepincode' => $officePincode,
                                      'officephone' => $officePhone,
                                      'createddate'=>$createdDate,
                                      'parentoffice_id'=>$parentOfficeId,
                                      'officetype_id'=>$officeTypeId,
                                      'officedescription' => $officeDescription,
                                      'office_fax' => $officeFax,
                                      'office_email_Id' => $officeEmailId,
                                      'contactperson' => $contactPerson,
                                      'contactperson_phone1' => $contactPersonPhone1,
                                      'contactperson_phone2' => $contactPersonPhone2,
                                      'contactperson_email' => $contactPersonEmail,
                                      'editedby'=>$this->view->createdby);

                    $match = array();
                    foreach ($updateOlddata as $key=>$val) {
                    if ($val != $updateNewdata[$key]) {
                        $match[] = $key;
                    }
                   }
                   if(count($match) <= 0) {
                        $this->view->updatEerror = 'updatemessage';
                    } else {
//                        echo "hiiiiiiiiiiiiiiiiiii".$createdBy = $this->view->createdby;
//                         $office = new Management_Model_Office();
//                         $office->officeUpdate($updateOlddata,$updateNewdata,$createdBy,$officeupdates_id,$office_id);
// 			$officenames = $office->editofficenames($officeForm->getValues(),$officeupdates_id);
// 			$officeaddress = $office->editofficeaddress($officeForm->getValues(),$office_id);
//                         $this->_redirect('management/newoffice/index');
                        }
                    }
            }

        }

    public function officedeleteAction() {
        $this->view->title = "Delete Office";
        $storage = new Zend_Auth_Storage_Session();
	$data = $storage->read();
	if(!$data){
            $this->_redirect('index/login');
	}
        $office_id = $this->_getParam('id');
        $this->view->office_id = $office_id;


        $office = new Management_Model_Office();
        $result = $office->viewOffice($office_id);
        $this->view->office = $result;

        $deleteform = new Management_Form_Delete();
        $this->view->deleteform = $deleteform;
        $path = $this->view->baseUrl();
        $officeForm = new Management_Form_Office($path);
	$this->view->form = $officeForm;
        if ($this->_request->isPost() && $this->_request->getPost('Yes')) {
            $formData = $this->_request->getPost();
            if ($deleteform->isValid($formData)) {

                $remarks = $deleteform->getvalue('remarks');
                $office_id = $this->_getParam('id');
                $office = new Management_Model_Office();
                $office->deleteOffice($office_id,$remarks);
                $this->_redirect('management/newoffice');
            }
        }
    }
      public function subofficeAction() {
        $this->_helper->layout()->disableLayout();
        $officetype_id=$this->view->officetypeid = $this->_request->getParam('officetype_id');
        $subOffice = new Management_Model_Office();


        if($officetype_id==1) { 
            $this->view->selectedSuboffice = $subOffice->subofficeFromUrl($officetype_id);
            $this->view->officetypename = $subOffice->officetypename($officetype_id);
        } else {
            $this->view->selectedSuboffice = $subOffice->subofficeFromUrl($officetype_id-1);
            $this->view->officetypename = $subOffice->officetypename($officetype_id-1);
        }
    }
}
