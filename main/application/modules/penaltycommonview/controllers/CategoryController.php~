<?php
class Management_CategoryController extends Zend_Controller_Action{

	public function init() {
		$this->view->pageTitle='Category';
	}

	public function indexAction() {
		$this->view->title = "Category";
                $storage = new Zend_Auth_Storage_Session();
                $data = $storage->read();
                if(!$data){
                    $this->_redirect('index/login');
                }
		$category = new Management_Model_Category();
		$categorydetails=$category->getCategoryinformation();
		$this->view->changelog=$category->getUpdatesinformation();
		$searchForm = new Management_Form_Search();
		$this->view->form = $searchForm;
		$category = new Management_Model_Category();
		$result = $category->getCategoryDetails();
		$page = $this->_getParam('page',1);
		$paginator = Zend_Paginator::factory($result);
		$paginator->setItemCountPerPage(5);
		$paginator->setCurrentPageNumber($page);
		$this->view->paginator = $paginator;
		if ($this->_request->isPost() && $this->_request->getPost('Search')) {
			$formData = $this->_request->getPost();
			if ($this->_request->isPost()) {
				$formData = $this->_request->getPost();
				if ($searchForm->isValid($formData)) {
					$result = $category->SearchCategory($searchForm->getValues());
					$page = $this->_getParam('page',1);
					$paginator = Zend_Paginator::factory($result);
					$paginator->setItemCountPerPage(5);
					$paginator->setCurrentPageNumber($page);
					$this->view->paginator = $paginator;
				}
			}
		}
	}

	public function categoryviewAction() {
		$this->view->title = "View Category";
		$category_id = $this->_getParam('category_id');
		$category = new Management_Model_Category();
		$this->view->changelog=$category->getUpdatesinformation();
		$result = $category->viewCategory($category_id);
		$this->view->category = $result;
	}

	public function categoryaddAction() {
		$this->view->title = "New Category";
		$categoryForm = new Management_Form_category();
		$this->view->form = $categoryForm;
		$category = new Management_Model_Category();
		$categoryName=$category->getCategoryDetails();
		$this->view->categoryname=$categoryName;
		if ($this->_request->isPost() && $this->_request->getPost('Submit')) {
			$formData = $this->_request->getPost();
			if ($this->_request->isPost()) {
				$formData = $this->_request->getPost();
				if ($categoryForm->isValid($formData)) {
					$category = new Management_Model_Category();
					$dbAdapter = Zend_Db_Table::getDefaultAdapter();
					$data['category_id']='';
					$dbAdapter->insert('ourbank_category', $data);
					$category_id = Zend_Db_Table::getDefaultAdapter()->lastInsertId('ourbank_category','category_id');
					$result = $category->addCategory($categoryForm->getValues(),$category_id);

// 					$categoryExtended = new settings_Model_Customization();
// 					$resultSet = $categoryExtended->fetchcustomized("ourbank_customizingform",1);
// 					if($resultSet) {
// 						$feildSet = $categoryExtended->getfieldNames("ourbank_Category_extended");
// 					}
// 
// 					foreach($feildSet as $feildSet) {
// 						$input = array($feildSet->COLUMN_NAME =>  $this->_request->getParam($feildSet->COLUMN_NAME));
// 					}
// 
//  					$result = $category->addExtendedCategory($input);

					$this->_redirect('management/category/index');
				}
			}
		}
	}

	public function categoryeditAction() {
		$this->view->title = "Edit Category";
		$category_id = $this->_getParam('category_id');
		$categoryForm = new Management_Form_category();
		$categoryForm->categoryname->removeValidator('Db_NoRecordExists');
		$this->view->form = $categoryForm;
		$category = new Management_Model_Category();
		$result = $category->viewCategory($category_id); 
		$categoryForm->populate($result[0]);
		if ($this->_request->isPost() && $this->_request->getPost('Update')) {
			$formData = $this->_request->getPost();
			if ($this->_request->isPost()) {
				$formData = $this->_request->getPost();
				if ($categoryForm->isValid($formData)) {
					$category = new Management_Model_Category();
					$sessionName = new Zend_Session_Namespace('ourbank');
					$createdby = $sessionName->primaryuserid;
					$categoryName = $categoryForm->getvalue('categoryname');
					$categoryDescription = $categoryForm->getvalue('categorydescription');

					$categorySelect = $category->viewCategory($category_id);
					foreach($categorySelect as $category) {
						$categoryNameOld=$category['categoryname'];
						$categoryDescriptionOld=$category['categorydescription'];
					}

					$updateOldCategory = array('categoryname' => $categoryNameOld,
												'categorydescription' => $categoryDescriptionOld);
					$updateNewCategory = array('categoryname' => $categoryName,
												'categorydescription' => $categoryDescription); 

					$match = array();
					foreach ($updateOldCategory as $key=>$val) {
						if ($val != $updateNewCategory[$key]) {
							$match[] = $key;
						}
					}

					if(count($match) <= 0) {                                          /** if the values are not changed */
						echo 'Values are not changed in form';
					} else {   
						/** if the values are changed */
						$category = new Management_Model_Category();
						$category->categoryUpdate($updateOldCategory,$updateNewCategory,$createdby,$category_id);
						$result = $category->editCategory($categoryForm->getValues(),$category_id);
						$this->_redirect('management/category/index');
					}
				}
			}
		} 
		$this->view->form = $categoryForm;
		$this->view->form->Submit->setName('Update');	
	}

	public function categorydeleteAction() {
		$this->view->title = "Delete category";
		$category_id=$this->_getParam('category_id');
		$this->view->categoryid=$category_id;
		$category = new Management_Model_Category();
		$result = $category->viewCategory($category_id);
		$this->view->category = $result;
		foreach ($this->view->category as $categoryrecordstatus) {
			$this->view->categorystatus=$categoryrecordstatus['recordstatus_id'];
		}

		$deleteform = new Management_Form_Delete();
		$this->view->deleteform = $deleteform;

		if ($this->_request->isPost() && $this->_request->getPost('Yes')) {
			$formData = $this->_request->getPost();
			if ($deleteform->isValid($formData)) {
				$remarks = $deleteform->getvalue('remarks');
				$category = new Management_Model_Category();
				$category->deleteCategory($category_id,$remarks);
				$this->_redirect('management/category/index');
			}
		}
	}
}