<?php
class Management_HolidayController extends Zend_Controller_Action{

    public function init() {
	$this->view->pageTitle='Holiday';
	$sessionName = new Zend_Session_Namespace('ourbank');
    $this->view->createdby = $sessionName->primaryuserid;
    }

    public function indexAction() {
        $this->view->title = "Holiday";
        $searchForm = new Management_Form_Search();
        $this->view->form = $searchForm;

        $holiday= new Management_Model_Holiday();
        $result = $holiday->getHoliday();
        $page = $this->_getParam('page',1);
        $paginator = Zend_Paginator::factory($result);
        $paginator->setItemCountPerPage(5);
        $paginator->setCurrentPageNumber($page);
        $this->view->paginator = $paginator;
		
		$model = new Management_Model_Office();
        $office_id1 = $model->getOffice();
        foreach($office_id1 as $office_id) {
		$searchForm->field1->addMultiOption($office_id['office_id'], 
		$office_id['office_name']); }
		
		if ($this->_request->isPost() && $this->_request->getPost('Search')) {
		    $formData = $this->_request->getPost();
		    if ($this->_request->isPost()) {
		        $formData = $this->_request->getPost();
		        if ($searchForm->isValid($formData)) {
				    $holiday = new Management_Model_Holiday();
					$result = $holiday->SearchHoliday($searchForm->getValues());

					$page = $this->_getParam('page',1);
		            $paginator = Zend_Paginator::factory($result);
		            $paginator->setItemCountPerPage(5);
		            $paginator->setCurrentPageNumber($page);
		            $this->view->paginator = $paginator;
		
		}
}
}
}
    public function holidayviewAction() {
        $this->view->title = "View Holiday";
        $holidayupdate_id = (int)$this->_getParam('id');
        $posts = new Management_Model_Holiday();
        $result = $posts->viewholiday($holidayupdate_id);
        $this->view->holiday = $result;
    }

    public function holidayaddAction() {
        $this->view->title = "New Holiday";
        $holidayForm = new Management_Form_Holiday();
        $this->view->form = $holidayForm;

        $model = new Management_Model_Office();
        $office_id1 = $model->getOffice();
        foreach($office_id1 as $office_id) {
                $holidayForm->office_id->addMultiOption($office_id['office_id'], 
                                                     $office_id['office_name']);
        }


        if ($this->_request->isPost() && $this->_request->getPost('Submit')) {
            $formData = $this->_request->getPost();
            if ($this->_request->isPost()) {
                $formData = $this->_request->getPost();
                if ($holidayForm->isValid($formData)) {            
				 

				$holiday = new Management_Model_Holiday();
				$dbAdapter = Zend_Db_Table::getDefaultAdapter();
				$data['holiday_id']='';
				$dbAdapter->insert('ourbank_holiday', $data);
				$holiday_id = Zend_Db_Table::getDefaultAdapter()->lastInsertId('ourbank_holiday','holiday_id');
                    				
				
				$createdby = $this->view->createdby;
				
				$model = new Management_Model_Holiday();
				$model->insertHoliday($holidayForm->getValues(),$createdby);
				$this->_redirect('management/Holiday/index');            
            }
        }
            $this->view->form = $holidayForm;
    }

}
    public function holidayeditAction() {
        $this->view->title = "Edit Holiday";
        $holidayupdate_id = (int)$this->_getParam('id');

        $holidayForm = new Management_Form_Holiday();
        $this->view->form = $holidayForm;
		
		$model = new Management_Model_Office();
        $office_id1 = $model->getOffice();
        foreach($office_id1 as $office_id) {
		$holidayForm->office_id->addMultiOption($office_id['office_id'], 
		$office_id['office_name']);
		}
		$posts = new Management_Model_Holiday();
        $result = $posts->viewholiday($holidayupdate_id);
		foreach($result as $holiday) {
		$this->view->form->holidayupdate_id->setValue($holiday['holidayupdate_id']);
		$this->view->form->holidayname->setValue($holiday['holidayname']);
		$this->view->form->office_id->setValue($holiday['office_id']);
		$this->view->form->holidayfrom->setValue($holiday['holidayfrom']);
		$this->view->form->holidayupto->setValue($holiday['holidayupto']);
		$this->view->form->repayment_date->setValue($holiday['repayment_date']);
		}
		$holidayForm->holidayname->removeValidator('Db_NoRecordExists');
		if ($this->_request->isPost() && $this->_request->getPost('Update')) {
		$formData = $this->_request->getPost();
		if ($this->_request->isPost()) {
		$formData = $this->_request->getPost();
		if ($holidayForm->isValid($formData)){
		$createdby = $this->view->createdby;
		$holidayupdate_id = $formData['holidayupdate_id'];
		
		$funds = new Management_Model_Holiday();
		$funds->UpdateHoliday($holidayupdate_id);

        $model = new Management_Model_Holiday();
        $model->insertHoliday($holidayForm->getValues(),$createdby);
		$this->_redirect('management/holiday');
		}
	    }
        }      
        $this->view->form->Submit->setName('Update');	
        
    }

    public function holidaydeleteAction() {
	$this->view->title = "Delete Holiday";
	
	$holidayupdate_id = (int)$this->_getParam('id');
	
	$this->view->holidayupdate_id = $holidayupdate_id;

	$posts = new Management_Model_Holiday();
	$result = $posts->viewholiday($holidayupdate_id);
	$this->view->holiday = $result;
	foreach($this->view->holiday as $holiday){
	$this->view->recordstatus_id = $holiday['recordstatus_id'];
	}

	$deleteform = new Management_Form_Delete();
	$this->view->deleteform = $deleteform;

	if ($this->_request->isPost() && $this->_request->getPost('Yes')) {
	$formData = $this->_request->getPost();
	if ($deleteform->isValid($formData)) {
	
	$holiday = new Management_Model_Holiday();
	$result = $holiday->viewholiday($holidayupdate_id);
	$this->view->holiday = $result;

	$remarks = $deleteform->getvalue('remarks');
	$holidayupdate_id  = (int)$this->_getParam('id');
	
	$holiday = new Management_Model_Holiday();
	$holiday->deleteHoliday($holidayupdate_id,$remarks);
	$this->_redirect('management/holiday');

	
	}
	}

    }
}