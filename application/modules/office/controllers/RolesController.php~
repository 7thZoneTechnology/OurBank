<?php
class Management_RolesController extends Zend_Controller_Action{

    public function init() {
        $this->view->pageTitle='Roles';
        $this->view->appPath = '/var/www/ourbank';

    }

    public function indexAction() {
        $this->view->title='Roles';
        $this->view->title = "New Role";
        $searchForm = new Management_Form_Search();
        $this->view->form = $searchForm;

        $roles = new Management_Model_Roles();
        $result = $roles->getRoles();

        $page = $this->_getParam('page',1);
        $paginator = Zend_Paginator::factory($result);
        $paginator->setItemCountPerPage(5);
        $paginator->setCurrentPageNumber($page);
        $this->view->paginator = $paginator;

        if ($this->_request->isPost() && $this->_request->getPost('Search')) {
	   
            if ($this->_request->isPost()) {
		
		if ($searchForm->isValid($this->_request->getPost())) {
		    $result = $roles->searchRoles($searchForm->getValues());
                    $page = $this->_getParam('page',1);
                    $paginator = Zend_Paginator::factory($result);
                    $paginator->setItemCountPerPage(5);
                    $paginator->setCurrentPageNumber($page);
                    $this->view->paginator = $paginator;
		} 
                if (!$result) {
		    echo "<font color='RED'>Records Not Found Try Again...</font>";
		}
	    }
	}
    }

    public function rolesaddAction() {
        $this->view->title = "New Role";

        $activity = new Management_Model_Roles();

        $form = new Management_Form_Roles();
        $this->view->form = $form;

        $module = $activity->getModule();
        $this->view->module = $module;

        $checkbox = $activity->getActivities();
        $this->view->checkbox = $checkbox;

        $subcheckbox = $activity->getSubActivities();
        $this->view->subcheckbox = $subcheckbox;

        if ($this->_request->isPost() && $this->_request->getPost('Submit')) {


       $grantname = $this->_request->getParam('grantname');

               $mainModule = $this->_request->getParam('mainModule'); // module id
               $subModule = $this->_request->getParam('subModule');  //submodule id
               $activitylist = $this->_request->getParam('activity');  //used while insertion

            if ($form->isValid($this->_request->getPost())) {
                $validator = new Zend_Validate_Db_NoRecordExists('ourbank_grant','grantname');
                if ($validator->isValid($grantname)) {
                    $grantedby="Admin";
                    $dbAdapter = Zend_Db_Table::getDefaultAdapter();
                    $data=array('grantname' => $grantname,
                                                'granteddate'=>date("Y-m-d"),
                                                'grantedby'=>$grantedby,
                                                'recordstatus_id'=>3);
                    $dbAdapter->insert('ourbank_grant', $data);
                    $grants = Zend_Db_Table::getDefaultAdapter()->lastInsertId('ourbank_grant','grant_id');






 foreach ($activitylist as $activityList) {
                                 $subModule = explode("-", $activityList);

 
                                $activity->addGrantActivites( array('grant_id' => $grants,
                                                                       'module_id' => 1,
                                                                       'submodule_id' =>$subModule[0],
                                                                       'activity_id' => $subModule[1],
                                                                       'recordstatus_id' => 3));
                      }




       }  else {
                $messages = $validator->getMessages();
                $this->view->errorgrantname=$grantname.' Existed';
                }    
 $this->_redirect('management/roles');
            }
        }
    }

    public function rolesviewAction() {
        $this->view->title = 'View Roles';

        $grant = new Management_Model_Roles();

        $grant_id = $this->_getParam('id');


        $this->view->module = $grant->getModule();
        $this->view->grantView  = $grant->getGrantname($grant_id);//grant name
        $this->view->activityView  = $grant->getMainModule($grant_id); //main module + Sub Module
        $this->view->editActivity  = $grant->editActivity($grant_id); //activity
        $this->view->editActivity1  = $grant->editActivity1($grant_id); //activity
        $this->view->activityView1  = $grant->getMainModule1($grant_id); // not main module + Sub Module
        $this->view->subactivity = $grant->getSubActivities(); // get all sub activites 
        $this->view->grantactivity = $grant->getgrantActivities($grant_id);

        $this->view->countActivity = count($this->view->subactivity);
        $this->view->countGantActivity = count($this->view->grantactivity);


    }

    public function roleseditAction() {
        $this->view->title = 'Edit Roles';

        $form = new Management_Form_Roles();
        $this->view->form = $form;

        $activity = new Management_Model_Roles();

        $grant_id = $this->_getParam('id');

$this->view->grantid=$grant_id;
 $grantactivity = $activity->getgrantActivities($grant_id);



 $this->view->grantView  = $activity->getGrantname($grant_id);
 $module = $activity->getModule();
        $this->view->module = $module;

        $checkbox = $activity->getActivities();
        $this->view->checkbox = $checkbox;

        $subcheckbox = $activity->getSubActivities();
        $this->view->subcheckbox = $subcheckbox;


foreach($grantactivity as $Grantactivity){
$mo[]=$Grantactivity['module_id'];
$sub[]=$Grantactivity['submodule_id'];
$act[]=$Grantactivity['activity_id'];
}

$this->view->modid=$mo;
$this->view->submodid=$sub;
$this->view->actid=$act;




        if ($this->_request->isPost() && $this->_request->getPost('Submit')) {

            $grantname = $this->_request->getParam('grantname');
            $grant_id = $this->_request->getParam('id');
            $mainModule = $this->_request->getParam('mainModule');
            $subModule = $this->_request->getParam('subModule');
            $activitylist = $this->_request->getParam('activity');


            $table = "ourbank_grantactivites";
	    $feildname = "grantactivites_id";
             $grantactivity = $activity->getgrantActivities($grant_id);
            foreach ($grantactivity as $grantactivity) {

                $data = array('recordstatus_id' => 2);

                $activity->familyMemberUpdate($feildname,$table,$grantactivity['grantactivites_id'],$data);
            }

           foreach ($activitylist as $activityList) {
           $subModule = explode("-", $activityList);
           $activity->addGrantActivites( array('grant_id' => $grant_id,
                                               'module_id' => 1,
                                               'submodule_id' =>$subModule[0],
                                               'activity_id' => $subModule[1],
                                               'recordstatus_id' => 3));
           }


           $this->_redirect('management/roles');
        } 


    }

    public function rolesdeleteAction() {
        $this->view->title = "Delete Role";

        $grant_id = (int)$this->_getParam('id');
        $this->view->form  = new Management_Form_Delete();

        $roles = new Management_Model_Roles();
        $result = $roles->getRoles();
        foreach($result as $result) {
            $this->view->grantname = $result["grantname"];
            $this->view->recordstatus_id = $result["recordstatus_id"];
            $this->view->grant_id = $result["grant_id"];
        }

        if ($this->_request->isPost() && $this->_request->getPost('Yes')) {

	    if ($this->view->form->isValid($this->_request->getPost())) {
                
		$remarks = $this->_getParam('remarks');
		$roles = new Management_Model_Roles();
                $data = array ('recordstatus_id' =>5,
                               'remarks' => $remarks);
                $roles->deleteGrants($grant_id,$data);
		$this->_redirect('management/roles');
	   }
	}
    }

}