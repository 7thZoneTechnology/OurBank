<?php
class Management_Model_Fundings extends Zend_Db_Table {
     protected $_name = 'ourbank_fundingdetails';

    public function getFundingsDetails() {
        $select = $this->select()
                       ->setIntegrityCheck(false)
                       ->join(array('a' => 'ourbank_fundingdetails'),array('fundingupdates_id'))
                       ->where('a.recordstatus_id = 3')
                       ->join(array('b'=>'ourbank_funderdetails'),'a.funder_id = b.funder_id')
                       ->where('b.recordstatus_id = 3')
                       ->join(array('c'=>'ourbank_currency'),'a.funding_currency_id = c.currency_id');
       $result = $this->fetchAll($select);
       return $result->toArray();
    }

  public function SearchFundings($post = array()) {
        $select = $this->select()
                       ->setIntegrityCheck(false)  
                       ->join(array('a' => 'ourbank_fundingdetails'),array('fundingupdates_id'))
                       ->where('a.recordstatus_id = 3')
                       ->where('a.fundingname like "%" ? "%"',$post['field2'])
                       ->where('a.fundingamount like "%" ? "%"',$post['field3'])
                       ->join(array('b'=>'ourbank_funderdetails'),'a.funder_id = b.funder_id')
                       ->where('b.recordstatus_id = 3')
                       ->where('b.fundername like "%" ? "%"',$post['field1'])
                       ->join(array('c'=>'ourbank_currency'),'a.funding_currency_id = c.currency_id')
                       ->where('c.currencyname like "%" ? "%"',$post['field5']);
           //die($select->__toString());
       $result = $this->fetchAll($select);
       return $result->toArray();
    }
     public function viewFundings($fundingupdates_id) {
        $select = $this->select()
                       ->setIntegrityCheck(false)
                       ->join(array('a' => 'ourbank_fundingdetails'),array('funding_id'))
                       ->where('a.recordstatus_id = 3 or a.recordstatus_id = 1')
                       ->where('a.funding_id  = ?',$fundingupdates_id)
                       ->join(array('b'=>'ourbank_funderdetails'),'a.funder_id = b.funder_id')
                       ->where('b.recordstatus_id = 3 or b.recordstatus_id = 1')
                       ->join(array('c'=>'ourbank_currency'),'a.funding_currency_id = c.currency_id')
                       ->join(array('d'=>'ourbank_productdetails'),'a.fundtype_id  = d.product_id')
                       ->where('d.recordstatus_id = 3 or d.recordstatus_id = 1');
//            die($select->__toString());
       $result = $this->fetchAll($select);
       return $result->toArray();
        }

    public function addFundings($post,$funding_id,$createby) {
           $data = array('fundingupdates_id'=> '',
                         'funding_id'=> $funding_id,
                         'fundingname'=>$post['fundingname'],
                         'fundtype_id'=>$post['fundtype_id'],
                         'funder_id' =>$post['funder_id'],
                         'funding_currency_id' =>$post['funding_currency_id'],
                         'fundingamount' =>$post['fundingamount'],
                         'exchangerate' =>$post['exchangerate'],
                         'fund_beginingdate' =>$post['fund_beginingdate'],
                         'fund_closingdate' =>$post['fund_closingdate'],
                         'recordstatus_id'=>'3',
                         'createdby'=> $createby,
                         'createddate'=>date("Y-m-d"));
            $this->insert($data);
    }

    public function UpdateFundings($fundingupdates_id) {
        $data = array('recordstatus_id'=> 2);
        $where = 'funding_id = '.$fundingupdates_id;
        $this->update($data , $where );
    }

    public function editFundings($post,$createby) {
        $data = array('fundingupdates_id'=> '',
                      'funding_id'=>$post['funding_id'],
                      'fundingname'=>$post['fundingname'],
                      'fundtype_id'=>$post['fundtype_id'],
                      'funder_id'=>$post['funder_id'],
                      'funding_currency_id'=>$post['funding_currency_id'],
                      'fundingamount'=>$post['fundingamount'],
                      'exchangerate'=>$post['exchangerate'],
                      'accounting_line'=> '',
                      'recordstatus_id'=> 3,
                      'fund_beginingdate'=>$post['fund_beginingdate'],
                      'fund_closingdate'=>$post['fund_closingdate'],
                      'createdby'=>$createby,
                      'createddate'=>date("Y-m-d"));
        $this->insert($data);
    }

    public function deleteFundings($fundingupdates_id,$remarks) {
        $data = array('recordstatus_id'=> 5,'remarks'=>$remarks);
        $where = 'funding_id = '.$fundingupdates_id;
        $this->update($data , $where );
	}

    public function viewfunder($funder_id) {
        $select = $this->select()
                       ->setIntegrityCheck(false)
                       ->join(array('a' => 'ourbank_funderdetails'),array('funder_id'))
			->where('a.funder_id = ?',$funder_id)
                       ->where('a.recordstatus_id = 3 or a.recordstatus_id = 1');
       $result = $this->fetchAll($select);
       return $result->toArray();
    }

    public function viewfundtype($fundtype_id) {
        $select = $this->select()
                       ->setIntegrityCheck(false)
                       ->join(array('a' => 'ourbank_productsofferdetails'),array('offerproduct_id'))
			->where('a.offerproduct_id = ?',$fundtype_id)
                       ->where('a.recordstatus_id = 3 or a.recordstatus_id = 1');
       $result = $this->fetchAll($select);
       return $result->toArray();
    }

    public function viewcurrency($funding_currency_id) {
        $select = $this->select()
                       ->setIntegrityCheck(false)
                       ->join(array('a' => 'ourbank_currency'),array('currency_id'))
			->where('a.currency_id = ?',$funding_currency_id);
       $result = $this->fetchAll($select);
       return $result->toArray();
    }

	public function fundingsUpdate($updateOldfundings= array(),$updateNewfundings= array(),$createdby,$fundingupdates_id)
	{
		$this->db = Zend_Db_Table::getDefaultAdapter();
		$match = array();
		foreach ($updateOldfundings as $key=>$val) {
			if ($val != $updateNewfundings[$key]) {                           /** if the values are changed */
				$match[] = $key;
    		}
		}
		if(count($match) <= 0){
		} else {
			foreach($match as $fundings) {
				$tableName ='ourbank_fundingdetails';
				$fundingsUpdates = array('fundingupdates_id'=>'',
							'funding_id' => $fundingupdates_id,
							'table_name'=>$tableName,
							'fieldname'=>$fundings,
							'previous_data'=>$updateOldfundings[$fundings],
							'current_data'=>$updateNewfundings[$fundings],
							'modified_by'=>$createdby,
							'modified_date'=>date("Y-m-d"));
				$this->db->insert("ourbank_fundingupdates",$fundingsUpdates);
			}
		}
	}
}
