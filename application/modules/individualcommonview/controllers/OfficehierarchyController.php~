<?php
class Management_OfficehierarchyController extends Zend_Controller_Action{

    public function init() {
         $this->view->pageTitle='Office Hierarchy';
         $sessionName = new Zend_Session_Namespace('ourbank');
         $this->view->createdby = $sessionName->primaryuserid;
    }

    public function indexAction() {
        $this->view->title = 'OfficeHierarchy';

        $officehierarchy = new Management_Model_Officehierarchy();
        $noOfficeLevel= $officehierarchy->noOfficeLevel();
        $this->view->noOfficeLevel=$noOfficeLevel;

        if($noOfficeLevel == 4) {
           $cat= $this->_request->getParam('officeNo'); /**No of levels inserting*/
           $this->view->cat=$cat;

           $form1 = new Management_Form_Hierarchy1($noOfficeLevel,$cat);
           $this->view->form1 = $form1;
           $this->view->form1->officeNo->setAttrib('onchange', 'reload(this.value)');
           $this->view->form1->Edit->setName('Confirm');
           $this->view->form1->Edit->setLabel('confirm');
           if($cat) { 
              $this->view->form1->officeNo->setValue($cat,$cat);
            }

            if ($this->_request->isPost() && $this->_request->getPost('Confirm')) {
                $formData = $this->_request->getPost();
                $officeNo= $form1->getValue('officeNo');
                if ($form1->isValid($formData)) {
                    for($i=1;$i<=$officeNo;$i++) {

                        $officeType=ucwords($form1->getValue('officeType'.$i));
                        $officeCode=ucwords($form1->getValue('officeCode'.$i));

                        $date=date("Y-m-d");
                        $createdby = $this->view->createdby;
                        $data = array('officetype_id'=>'',
                                      'officetype' => $officeType,
                                      'Hierarchy_level'=>$i,
                                      'created_userid'=>$createdby,
                                      'createddate'=>$date,
                                      'officeshort_name' =>$officeCode);
                        $officehierarchy->officeInsert($data,$i,$createdby,$date);
                    }
                    $this->_redirect('management/officehierarchy');
               }
            }
            }
 else {
echo $noOfficeLevel;
                $this->view->errorExisted = $this->_request->getParam('Existed');
                $officehierarchy = new Management_Model_Officehierarchy();
                $this->view->officeHierarchySelect = $officehierarchy->fetchAllHierarchy();

                $form1 = new Management_Form_Hierarchy($noOfficeLevel,$noOfficeLevel);
                $this->view->form1 = $form1;
                $this->view->form1->officeNo->setValue($noOfficeLevel);
                $this->view->noOfficeLevel=$noOfficeLevel;
                $i=1; 
                foreach($this->view->officeHierarchySelect as $eacharraysent) {
                        $a='officeType'.$i;
                        $b='officeCode'.$i;
                        $c='id'.$i;
                        $d='hierarchyLevel'.$i;
                        $e='disable'.$i;
                        $this->view->form1->$a->setValue($eacharraysent->officetype);
                        $this->view->form1->$a->setAttrib('readonly','true');
                        $this->view->form1->$b->setAttrib('size', '2');
                        $this->view->form1->$b->setAttrib('readonly','true');
                        $this->view->form1->$b->setValue($eacharraysent->officeshort_name);
                        $this->view->form1->$c->setValue($eacharraysent->officetype_id);
                        $this->view->form1->$d->setValue($eacharraysent->Hierarchy_level);

                        $this->view->officeExistedInThisType = $officehierarchy->officeExistedInThisType($eacharraysent->officetype_id);

                        if(count($this->view->officeExistedInThisType) > 0) {
                                 $this->view->$e='disabled';
                        } else {
                            $this->view->$e='';
                            }
                        $i++;
                        }
                }
                if($this->_request->getParam('delete')) {
                   $officeTypeId = $this->_request->getParam('officeTypeId');
                   $officehierarchy = new Management_Model_Officehierarchy();
                   $this->view->officeExistedInThisType = $officehierarchy->officeExistedInThisType($officeTypeId);
                   if(count($this->view->officeExistedInThisType)>0) {
                        echo "<script language=javascript>alert('you cant delete the office .First delete lower office(".$officeName.")')</script>";
                        echo "<script>window.location='".$this->view->appPath."management/office/public'</script>";
                    } else {
                        $this->_redirect('management/officehierarchy/delete/id/'.$officeTypeId);
                    }
                }
    }

   function editAction() {
        $this->view->title = 'Edit OfficeHierarchy';
        $officehierarchy = new Management_Model_Officehierarchy();
        $this->view->officeHierarchySelect = $officehierarchy->fetchAllHierarchy();
        $noOfficeLevel=$this->_request->getPost('officeNo');

        $form1 = new Management_Form_Hierarchy1($noOfficeLevel,$noOfficeLevel);
        $this->view->form1 = $form1;
        $this->view->form1->officeNo->setValue($noOfficeLevel);
        $this->view->Edit=$this->_request->getPost('Next');
        $this->view->Confirm=$this->_request->getPost('Confirm');
        $this->view->noOfficeLevel=$noOfficeLevel;

        if($this->_request->getPost('Next')) {
           $officeLevel=$this->_request->getPost('officeLevel');
           $this->view->officeLevel=$officeLevel;
           $formData = $this->_request->getPost();
           $this->view->form1->officeLevel->setValue($officeLevel);
           for($i=1;$i<=$noOfficeLevel;$i++) {
               $a='officeType'.$i;
               $b='officeCode'.$i;
               $c='id'.$i;
               $d='hierarchyLevel'.$i;
                if($i <= $officeLevel) {
                   $this->view->form1->$a->setValue($this->_request->getPost('officeType'.$i));
                   $this->view->form1->$b->setAttrib('size', '2');
                   $this->view->form1->$a->setAttrib('readonly', 'true');
                   $this->view->form1->$b->setAttrib('readonly', 'true');
                   $this->view->form1->$a->setAttrib('class', 'txt_put nonEditing');

                    $this->view->form1->$b->setAttrib('class', 'txt_put nonEditing');
                    $this->view->form1->$b->setValue($this->_request->getPost('officeCode'.$i));
                    $this->view->form1->$d->setValue($this->_request->getPost('hierarchyLevel'.$i));
                    $this->view->form1->$c->setValue($this->_request->getPost('id'.$i));
                } else {
                    if($i == $officeLevel+1) {
                       $validator = new Zend_Validate_Db_NoRecordExists('ourbank_officehierarchy','officetype');		
                       $validator1 = new Zend_Validate_Db_NoRecordExists('ourbank_officehierarchy','officeshort_name');
                       $officeType=$this->_request->getPost('officeType'.$noOfficeLevel);
                       $officeCode=$this->_request->getPost('officeCode'.$noOfficeLevel);
                       if ($validator->isValid($officeType)){
                            if ($validator1->isValid($officeCode)){
                                $this->view->form1->$a->setValue($this->_request->getPost('officeType'.$noOfficeLevel));
                                $this->view->form1->$b->setAttrib('size', '2');
                                $this->view->form1->$a->setAttrib('readonly', 'true');
                                $this->view->form1->$b->setAttrib('readonly', 'true');
                                $this->view->form1->$a->setAttrib('class', 'txt_put editing');

                                $this->view->form1->$b->setAttrib('class', 'txt_put editing');
                                $this->view->form1->$b->setValue($this->_request->getPost('officeCode'.$noOfficeLevel));
                                $this->view->form1->$c->setValue($this->_request->getPost('id'.$noOfficeLevel));
                                $this->view->form1->$d->setValue($officeLevel+1);
                            } else {
                                    $messages = $officeCode.'alreadyexisting';
                                    $this->_redirect("management/officehierarchy?Existed=".$messages);
                                }
                        } else {
                            $messages = $officeType.'alreadyexisting';
                            $this->_redirect("management/officehierarchy?Existed=".$messages);
                          }
                    } else {
                        $officeLevel++;
                        $this->view->form1->$a->setValue($this->_request->getPost('officeType'.$officeLevel));
                        $this->view->form1->$b->setAttrib('size', '2');
                        $this->view->form1->$a->setAttrib('readonly', 'true');
                        $this->view->form1->$b->setAttrib('readonly', 'true');
                        $this->view->form1->$a->setAttrib('class', 'txt_put nonEditing');

                        $this->view->form1->$b->setAttrib('class', 'txt_put nonEditing');
                        $this->view->form1->$b->setValue($this->_request->getPost('officeCode'.$officeLevel));
                        $this->view->form1->$c->setValue($this->_request->getPost('id'.$officeLevel));
                        $this->view->form1->$d->setValue($officeLevel+1);
                    }
                }
            }
                $this->view->form1->Edit->setName('Confirm');
                $this->view->form1->Edit->setLabel('confirm');
                $this->view->form1->Edit->setAttrib('class', 'officesubmit');
                $this->view->form1->officeLevel->setRequired(true)
                     ->addValidators(array(array('NotEmpty'),array('stringLength', false, array(1, 2)),array('Digits') ));
            }

            if ($this->_request->isPost() && $this->_request->getPost('Confirm')) {
                $formData = $this->_request->getPost();
                $officeLevel=$this->_request->getPost('officeLevel');
                if ($form1->isValid($formData)) {
                if($officeLevel) {
                    for($i=1;$i<=$this->_request->getPost('officeNo');$i++) {
                        if($i <= $officeLevel) {
                           $officeType=ucwords($form1->getValue('officeType'.$i));
                           $id=$form1->getValue('id'.$i);
                           $officeCode=ucwords($form1->getValue('officeCode'.$i));
                           $level=$form1->getValue('hierarchyLevel'.$i);
                           $data = array('officetype' => $officeType,
                                         'Hierarchy_level'=>$level,
                                         'officeshort_name' =>$officeCode);
                           $officehierarchy->officeUpdate($id,$data);
                    } else {
                            if($i == $officeLevel+1) {	
                               $officeType=ucwords($form1->getValue('officeType'.$i));
                               $officeCode=ucwords($form1->getValue('officeCode'.$i));
                               $level=$form1->getValue('hierarchyLevel'.$i);
                               $createdby = $this->view->createdby;
                               $data = array('officetype_id'=>'',
                                             'officetype' => $officeType,
                                             'Hierarchy_level'=>$level,
                                             'created_userid'=>$createdby,
                                             'createddate'=>date("Y-m-d"),
                                             'officeshort_name' =>$officeCode);
                                $date=date("Y-m-d");
                                $officehierarchy->officeInsert($data,$level,$createdby,$date);
                            } else {	
                                $officeType=ucwords($form1->getValue('officeType'.$i));
                                $id=$form1->getValue('id'.$i);
                                $officeCode=ucwords($form1->getValue('officeCode'.$i));
                                $level=$form1->getValue('hierarchyLevel'.$i);
                                $date=date("Y-m-d");
                                $data = array('officetype' => $officeType,
                                              'Hierarchy_level'=>$level,
                                              'officeshort_name' =>$officeCode);
                                $officehierarchy->officeUpdate($id,$data);
                                $data1 = array('recordstatus_id'=>'2');
                                $officehierarchy->officeLevelUpdate($id,$data1,$level,$createdby,$date);
                            }
                        }
                    }
                }
                $this->_redirect('management/officehierarchy');
            }
            }

        if ($this->_request->isPost() && $this->_request->getPost('update')) {
            $form1 = new Management_Form_EditHierarchy();
            $this->view->form1 = $form1;
            $formData = $this->_request->getPost();
            if ($form1->isValid($formData)) {
                $validator = new Zend_Validate_Db_NoRecordExists('ourbank_officehierarchy','officetype');		
                $validator1 = new Zend_Validate_Db_NoRecordExists('ourbank_officehierarchy','officeshort_name');	
                $id=$form1->getValue('id');
                $officeType=ucwords($form1->getValue('officeType'));
                $officeCode=ucwords($form1->getValue('officeCode'));
                $data = array('officetype' => $officeType,
                              'officeshort_name' =>$officeCode);
                                $officehierarchy = new Management_Model_Officehierarchy();
                                $result=$officehierarchy->fetchOneOfficeHierarchy($id);
                                foreach($result as $hierarchyArray) {
                                    $oldData = array('officetype' => $hierarchyArray->officetype,
                                                     'officeshort_name' =>$hierarchyArray->officeshort_name);
                                }
                                $match = array();
                                foreach ($oldData as $key=>$val) {
                                if ($val != $data[$key]) {
                                    $match[] = $key;
                                }
                                }

                                if(count($match) <= 0) {
                                $this->view->updatEerror='updatemessage';
                                $this->view->form1->Edit->setName('update');
                                $this->view->form1->Edit->setLabel('update');
                                $this->view->form1->Edit->setAttrib('class', 'officesubmit');
                                $this->_redirect("/management/officehierarchy");
                                } else  if ($validator->isValid($officeType) || $validator1->isValid($officeCode)){
                                       $officehierarchy = new Management_Model_Officehierarchy();
                                       $editOfficeHierarchy=$officehierarchy->editOfficeHierarchy($id);
                                       foreach($editOfficeHierarchy as $editOfficeHierarchyArray) {
                                       if ($editOfficeHierarchyArray->officetype!=$officeType ||	      $editOfficeHierarchyArray->officeshort_name!=$officeCode) {
                                               $officehierarchy->officeUpdate($id,$data);
                                               $this->_redirect('management/officehierarchy');
                                      } else {
                                          $this->view->form1->Edit->setName('update');
                                          $this->view->form1->Edit->setLabel($this->view->ZendTranslate->_("update"));
                                          $this->view->form1->Edit->setAttrib('class', 'officesubmit');
                                          $messages = $officeType.' (OR) '.$officeCode.' '.'alreadyexisting';
                                          $this->_redirect("management/officehierarchy?Existed=".$messages);
                                        }
                                     }
                        } else {
                            $this->view->form1->Edit->setName('update');
                            $this->view->form1->Edit->setLabel($this->view->ZendTranslate->_("update"));
                            $this->view->form1->Edit->setAttrib('class', 'officesubmit');
                            $messages = $officeType.' (OR) '.$officeCode.'alreadyexisting';
                            $this->_redirect("management/officehierarchy?Existed=".$messages);
                        }
                    } else {
                        $messages= 'noProperData';
                        $this->_redirect("management/officehierarchy?Existed=".$messages);
                    }
                 }
            }

    function inlineeditAction() {
        $this->_helper->layout->disableLayout();
        $id = $this->_request->getParam('subOfficeId');


        $form1 = new Management_Form_EditHierarchy();
        $this->view->form1 = $form1;

        $officehierarchy = new Management_Model_Officehierarchy();
        $result=$officehierarchy->fetchOneOfficeHierarchy($id);
        foreach($result as $hierarchyArray) {
                $officetype =$hierarchyArray->officetype;
                $officeshort_name=$hierarchyArray->officeshort_name;
                $this->view->hierarchyLevel=$hierarchyArray->Hierarchy_level;
        }
        $this->view->form1->officeType->setValue($officetype);
        $this->view->form1->officeType->setAttrib('class', 'txt_put editing');

        $this->view->form1->officeCode->setAttrib('class', 'txt_put editing');
        $this->view->form1->officeCode->setAttrib('size', '2');
        $this->view->form1->officeCode->setValue($officeshort_name);
        $this->view->form1->hierarchyLevel->setValue($this->view->hierarchyLevel);
        $this->view->form1->id->setValue($id);
        $this->view->form1->Edit->setName('update');
        $this->view->form1->Edit->setLabel('update');
        $this->view->form1->Edit->setAttrib('class', 'officesubmit');
        $this->view->form1->Edit->setAttrib('style', 'float: left;margin-left:2px');

	}

    function deleteAction() {
        $Management = new Management_Form_Deletehierarchy;
        $this->view->deleteform = $Management->deleteForm('officeTypeId');
        $id = $this->_request->getParam('id');
        $this->view->deleteform->officeTypeId->setValue($id);
        if($id) {
           $officehierarchy = new Management_Model_Officehierarchy();
           $officeNames=$officehierarchy->fetchOneOfficeHierarchy($id);
           foreach($officeNames as $officeNames1) {
                   $this->view->officeTypeName=$officeNames1->officetype;
           }
      }

        if ($this->_request->isPost()) {
            $action_yes = $this->_request->getPost('Yes');
            $action_no = $this->_request->getPost('No');
            if($action_yes=="Yes"){
               $officeTypeId=$this->_request->getParam('officeTypeId');
               $officehierarchy = new Management_Model_Officehierarchy();
               $officeNames=$officehierarchy->fetchOneOfficeHierarchy($officeTypeId);
               foreach($officeNames as $officeNames1) {
                       $Hierarchy_level=$officeNames1->Hierarchy_level;
                }
                $officehierarchy = new Management_Model_Officehierarchy();
                $officeLevelNames=$officehierarchy->officeLowerLevel($Hierarchy_level);
                foreach($officeLevelNames as $officeNames1) {
                        $input=array('Hierarchy_level'=>$officeNames1->Hierarchy_level-1);
                        $officehierarchy->officeTypeLevelUpdate($officeNames1->officetype_id,$input);
                }
                $officehierarchy->officeTypeDelete($officeTypeId);
                $this->_redirect('/management/officehierarchy');
            } else if($action_no=="No"){
                  $this->_redirect('/management/officehierarchy');	
               }
        }
     }
}