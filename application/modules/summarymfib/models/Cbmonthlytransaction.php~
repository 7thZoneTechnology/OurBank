<?php 
class Cbmonthlytransaction_Model_Cbmonthlytransaction extends Zend_Db_Table { 
 protected $_name = 'ob_accounts';

 
public function getbankNames() {
         $select = $this->select()
                        ->setIntegrityCheck(false)  
                        ->from('ob_institute_bank_details')
			->where('recordstatus_id=3');
        return $result = $this->fetchAll($select);
      // die ($select->__toString($select));

    }
 public function Searchmonthlybanktransaction($month,$year,$bank) {
       $select = $this->select()

		->setIntegrityCheck(false)  
		->join(array('a' => 'ob_accounts'),array('account_id'),array('member_id','account_id','account_number','count(account_number) as totac'))
		->where('a.accountstatus_id = 1 or a.accountstatus_id=3');
// 		->join(array('b' => 'ourbank_members'),'a.member_id = b.member_id')
// 		->where('b.member_status = 3 or b.member_status=1')
// 		->join(array('c' => 'ourbank_loanaccounts'),'a.account_id = c.account_id')
// 		->where('c.recordstatus_id = 3 or c.recordstatus_id=1')
// 		->join(array('d' => 'ourbank_installmentdetails'),'d.account_id = c.account_id',array('SUM(d.accountinstallment_amount) as balance','d.accountinstallment_date'))
// 		->where('d.installment_status  != 2')
// 		->join(array('e' => 'ourbank_loan_disbursement'),'e.account_id = d.account_id')
// 		->where('e.recordstatus_id = 3 or e.recordstatus_id=1')
// 		->join(array('f' => 'ourbank_loan_repayment'),'f.account_id = e.account_id')
// 		->where('f.recordstatus_id = 3 or f.recordstatus_id=1')
// 		->order('a.member_id')

		//->group('a.account_id');
         //die($select->__toString());
        $result = $this->fetchAll($select);
        return $result;
    }
 public function Searchbanktransaction($bank) {
        $select = $this->select()
        ->setIntegrityCheck(false)  
        ->join(array('a' => 'ob_transaction'),array('account_id'))
			->where('a.recordstatus_id=3')

	->join(array('b'=>'ob_accounts'),'a.account_id=b.account_id')
	->join(array('c'=>'ob_member_details'),'b.member_id=c.member_id AND c.Institute_bank_id="'.$bank.'"')
			->where('c.recordstatus_id=3')

	->join(array('d'=>'ob_institute_bank_details'),'d.Institute_bank_id=c.Institute_bank_id')
			->where('d.recordstatus_id=3')

	->join(array('e'=>'ob_activity_details'),'e.activity_id=b.activity_id')
			->where('e.recordstatus_id=3');


        //die($select->__toString());
        $result = $this->fetchAll($select);
        return $result->toArray();
    }
 public function Searchyearbanktransaction($year,$bank) {
        $select = $this->select()
        ->setIntegrityCheck(false)  
        ->join(array('a' => 'ob_transaction'),array('account_id'))
        ->where('YEAR(a.transaction_date)="'.$year.'"')
			->where('a.recordstatus_id=3')

	->join(array('b'=>'ob_accounts'),'a.account_id=b.account_id')
	->join(array('c'=>'ob_member_details'),'b.member_id=c.member_id AND c.Institute_bank_id="'.$bank.'"')
			->where('c.recordstatus_id=3')

	->join(array('d'=>'ob_institute_bank_details'),'d.Institute_bank_id=c.Institute_bank_id')
			->where('d.recordstatus_id=3')

	->join(array('e'=>'ob_activity_details'),'e.activity_id=b.activity_id')
			->where('e.recordstatus_id=3');

        //die($select->__toString());
        $result = $this->fetchAll($select);
        return $result->toArray();
    }
public function Searchmonthyearbanktransaction($year,$month) {
        $select = $this->select()
        ->setIntegrityCheck(false)  
        ->join(array('a' => 'ob_transaction'),array('account_id'))
        ->where('MONTH(a.transaction_date)= "'.$month.'" AND YEAR(a.transaction_date)="'.$year.'"')
			->where('a.recordstatus_id=3')

	->join(array('b'=>'ob_accounts'),'a.account_id=b.account_id')
	->join(array('c'=>'ob_member_details'),'b.member_id=c.member_id')
			->where('c.recordstatus_id=3')

	->join(array('d'=>'ob_institute_bank_details'),'d.Institute_bank_id=c.Institute_bank_id')
			->where('d.recordstatus_id=3')

	->join(array('e'=>'ob_activity_details'),'e.activity_id=b.activity_id')
			->where('e.recordstatus_id=3');

        //die($select->__toString());
        $result = $this->fetchAll($select);
        return $result->toArray();
    }
public function Searchyearlybanktransaction($year) {
        $select = $this->select()
        ->setIntegrityCheck(false)  
        ->join(array('a' => 'ob_transaction'),array('account_id'))
        ->where('YEAR(a.transaction_date)="'.$year.'"')
			->where('a.recordstatus_id=3')

	->join(array('b'=>'ob_accounts'),'a.account_id=b.account_id')
	->join(array('c'=>'ob_member_details'),'b.member_id=c.member_id')
			->where('c.recordstatus_id=3')

	->join(array('d'=>'ob_institute_bank_details'),'d.Institute_bank_id=c.Institute_bank_id')
			->where('d.recordstatus_id=3')

	->join(array('e'=>'ob_activity_details'),'e.activity_id=b.activity_id')
			->where('e.recordstatus_id=3');

        //die($select->__toString());
        $result = $this->fetchAll($select);
        return $result->toArray();
    }
 public function Searchalltransaction() {
        $select = $this->select()
        ->setIntegrityCheck(false)  
        ->join(array('a' => 'ob_transaction'),array('account_id'))
			->where('a.recordstatus_id=3')

	->join(array('b'=>'ob_accounts'),'a.account_id=b.account_id')
	->join(array('c'=>'ob_member_details'),'b.member_id=c.member_id')
			->where('c.recordstatus_id=3')

	->join(array('d'=>'ob_institute_bank_details'),'d.Institute_bank_id=c.Institute_bank_id')
			->where('d.recordstatus_id=3')

	->join(array('e'=>'ob_activity_details'),'e.activity_id=b.activity_id')
			->where('e.recordstatus_id=3');


        //die($select->__toString());
        $result = $this->fetchAll($select);
        return $result->toArray();
    }

}