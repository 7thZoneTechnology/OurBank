<?php
class Bank_IndexController extends Zend_Controller_Action 
{
    public function init()
    {
        $this->view->pageTitle='Bank';
        $sessionName = new Zend_Session_Namespace('ourbank');
        $userid=$this->view->createdby = $sessionName->primaryuserid;
      	$login=new App_Model_Users();
        $loginname=$login->username($userid);
        foreach($loginname as $loginname) {
			$this->view->primaryid=$loginname['user_id'];
			$this->view->id=$loginname['id'];
            $this->view->username=$loginname['username'];
		   	$this->view->primaryrole=$loginname['grantname'];
        }
    }

    public function indexAction() 
    { 
        $searchForm = new Management_Form_Search();
        $this->view->form = $searchForm;
        
        if ($this->_request->isPost() && $this->_request->getPost('Search')) {
            $bank = new Bank_Model_Bank();
            $page = $this->_getParam('page',1);
	    	$paginator = Zend_Paginator::factory($bank->search($this->_request->getPost('field2')));
        } else {
            $this->view->title='Bank';
            $storage = new Zend_Auth_Storage_Session();
            $data = $storage->read();
            if(!$data)
            {
                $this->_redirect('index/login');
            }
            $bank = new Bank_Model_Bank();
            $page = $this->_getParam('page',1);
	    	$paginator = Zend_Paginator::factory($bank->getBank());

        }
		//paginator
	    $paginator->setItemCountPerPage(5);
	    $paginator->setCurrentPageNumber($page);
	    $this->view->paginator = $paginator;
    }
    
 	public function addbankAction() 
    {
       //Acl
       $acl = new App_Model_Acl();
       $access = new App_Model_Access();
       $role = $access->getRole($this->view->id);

       $accessid = $access->accessRights('Bank',$role,"addbankAction");
       $checkaccess = $acl->isAllowed($role,'Bank',$accessid);
       if(($role) && ($checkaccess != NULL)) {
			// add bank
			$this->view->title='Add Bank';
	
			$form = new Institution_Form_Institution(2);
			$this->view->form = $form;
			$this->view->submitform = new Bank_Form_Submit();
	
			if ($this->_request->isPost() && $this->_request->getPost('Submit')) {

				if ($this->_request->isPost()) {
					$formData = $this->_request->getPost();
						if ($form->isValid($formData)) { 
							// Insertion in primary Table
							$bank = new Bank_Model_Bank();
							$pk = $bank->pkinsert(array("Institute_bank_id" => ""));
							
							// Insertion of other details
							$replacements = array('Institute_bank_id' => '');
							$replacements2 = array('Institute_bank_id' => $pk);
							$bank->addBank(array_replace($form->getValues(), $replacements, $replacements2));
									$this->_redirect('/bankcommonview/index/commonview/id/'.$pk);
						}
					}
			}
		} else {
            $this->_redirect('index/index');
		}
    }
    
    public function editbankAction() 
    {
        $storage = new Zend_Auth_Storage_Session();
        $data = $storage->read();
        if(!$data)
        {
            $this->_redirect('index/login');
        }
    
		//Acl
		$acl = new App_Model_Acl();
		$access = new App_Model_Access();
		$role = $access->getRole($this->view->id);

		$accessid = $access->accessRights('Bank',$role,"editbankAction");
		$checkaccess = $acl->isAllowed($role,'Bank',$accessid);
       	if (($role) && ($checkaccess != NULL)) {
          	// edit bank   
            $form = new Institution_Form_Institution(2);
            $this->view->form = $form;
            $this->view->submitform = new Bank_Form_Submit();

            if ($this->_request->isPost() && $this->_request->getPost('Submit')) {
                if ($this->_request->isPost()) {
                    $formData = $this->_request->getPost();
                    if ($form->isValid($formData)) { 
                        $bank = new Bank_Model_Bank();
                        //Update the previous record
                        $bank->updateBank($this->_request->getPost('Institute_bank_id'),1,2,array('recordstatus_id' => 2));

                        // Insertion of other details

                        $result = $bank->addBank(array_replace($form->getValues(), array('Institute_bank_id' => ''), array('Institute_bank_id' => $this->_request->getPost('Institute_bank_id'))));
                        $this->_redirect('/bankcommonview/index/commonview/id/'.$this->_request->getPost('Institute_bank_id'));
                    }
                }
            } else {
            
                $this->view->title='Edit Bank';
                $bank = new Bank_Model_Bank();
                $form->populate($bank->viewBank($this->_request->getParam("id")));
            }
		} else {
               $this->_redirect('index/index');
		}
    }
    
    public function viewbankAction () 
    {
    
    }
    
    public function deletebankAction() 
	{
     
    	//Acl
       	$acl = new App_Model_Acl();
       	$access = new App_Model_Access();
        $role = $access->getRole($this->view->id);

        $accessid = $access->accessRights('Bank',$role,"deletebankAction");
        $checkaccess = $acl->isAllowed($role,'Bank',$accessid);
        if (($role) && ($checkaccess != NULL)) {
    		$this->view->title='Delete Bank';
			$this->view->id = $this->_request->getParam("id");
			
			$form = new Institution_Form_Delete();
			$this->view->form = $form;
			
			$institution = new Bank_Model_Bank();
			$editinstitution = $institution->viewBank($this->_request->getParam("id"));
			foreach($editinstitution as $editinstitution) {
			$this->view->name = $editinstitution["Institute_bank_name"];
        	}
        
			if ($this->_request->isPost() && $this->_request->getPost('Yes'))
			{
				$institution = new Institution_Model_Institution();
		
				$id=$this->_request->getParam("id");
				$data = array('recordstatus_id' => 5);
				$pk = "Institute_bank_id";
				$table = "ob_institute_bank_details";
				$institution->deleteRecord($id,$pk,$table,$data);
				//Delete Address
				$pk = "id";
				$table ="ob_address_details";
				$modId = "1";
				$sumodId = "2";
				$institution->deleteDependent($id,$pk,$table,$data,$modId,$sumodId);
				//Delete Contact Details
				$pk = "id";
				$table ="ob_contact_details";
				$modId = "1";
				$sumodId = "2";
				$institution->deleteDependent($id,$pk,$table,$data,$modId,$sumodId);
				// Insert the deleted Record
				$data = array('module_id' => "1",
								'submodule_id' =>"2",
								'id' => $id,
								'remarks' =>$this->_request->getPost('remarks'),
								'deleted_by' => "1",
								'deleted_date' =>date("y/m/d H:i:s"));
				$institution->deletinsert($data);
				$this->_redirect('/bank');
			}
    	} else {
	     $this->_redirect('index/index');
    	}
	}
}

